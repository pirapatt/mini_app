
Page({
  data: {
    imagePath: '',
    info: '',
    currentPage: 0,
    buttonsPerPage: 99,
    title: '',
    categorizedButtons: [
      {
        category: '1. Foundation',
        buttons: [
          { label: 'Get SystemInfoSync', action: 'getSystemInfoSync' },
          { label: 'Get UpdateManager', action: 'getUpdateManager' },
          { label: 'Get LaunchOptionsSync', action: 'getLaunchOptionsSync' },
        ]
      },
      {
        category: '2. Routing',
        buttons: [
          { label: 'NavigateTo', action: 'navigateTo' },
          { label: 'NavigateToMiniProgram', action: 'handleNavigateToMiniProgram' },
        ]
      },
      {
        category: '3. Jump',
        buttons: [
          { label: 'EventChanel', action: 'handleEventChanelTap' },
          { label: 'ExitMiniProgram', action: 'handleExitMiniProgram' },
        ]
      },
      {
        category: '4. Forward',
        buttons: [
          { label: 'ShowShareMenu', action: 'showShareMenu' },
        ]
      },
      {
        category: '5. Interface',
        buttons: [
          { label: 'ShowLoding', action: 'showLoding' },
          { label: 'ShowModal', action: 'showModal' },
          { label: 'ShowToast', action: 'showToast' },
        ]
      },
      {
        category: '6. Internet',
        buttons: [
          { label: 'UploadFile', action: 'uploadFile' },
          { label: 'DownloadFile', action: 'downloadFile' },
          { label: 'ConnectSocket', action: 'connectSocket' },
        ]
      },
      {
        category: '7. Data Cache',
        buttons: [
          { label: 'SetStorageSync', action: 'setStorageData' },
          { label: 'GetStorage', action: 'getStorageData' },
          { label: 'ClearStorage', action: 'clearStorageData' },
        ]
      },
      {
        category: '8. Data Analysis',
        buttons: [
          { label: 'ReportEvent', action: 'reportEvent' },
        ]
      },
      {
        category: '9. Canvas',
        buttons: [
          { label: 'GoToCanvas', action: 'navigateToCanvas' },
        ]
      },
      {
        category: '10. Worker',
        buttons: [
          { label: 'CreateWorker', action: 'createWorker' },
        ]
      },
      {
        category: '11. Media',
        buttons: [
          { label: 'CreateVideoContext', action: 'navigateToVideoContext' },
          { label: 'PreviewImage', action: 'previewImage' },
          { label: 'ChooseImage', action: 'chooseImage' },
        ]
      },
      {
        category: '12. WXML',
        buttons: [
          { label: 'Go To WXML', action: 'navigateToWxml' },
        ]
      },
      {
        category: '13. Document',
        buttons: [
          { label: 'SaveFile & OpenDocument', action: 'saveFile' },
          { label: 'GetSavedFileList', action: 'getSavedFileList' },
        ]
      },
      {
        category: '14. Equipment',
        buttons: [
          { label: 'ScanCode', action: 'scanQRCode' },
        ]
      },
      {
        category: '15. Location',
        buttons: [
          { label: 'GetLocation', action: 'getCurrentLocation' },
          { label: 'ChooseLocation', action: 'chooseLocation' },
          { label: 'OpenLocation', action: 'openLocation' },
        ]
      },
      {
        category: 'Custom APIs',
        buttons: [
          { label: 'CallApiRegistered', action: 'callApiRegistered' },
        ]
      },
      {
        category: 'Flutter Param',
        buttons: [
          { label: 'LaunchOptions', action: 'launchOptions' },
        ]
      },
    ],
  },

  onLoad() {
    let that = this;
    wx.getSetting({
      success(res) {
        if (!res.authSetting['scope.userLocation']) {
          // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
          wx.authorize({
            scope: 'scope.userLocation',
            success() {
              // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ
              wx.getLocation({
                success: (res) => {
                  const latitude = res.latitude;
                  const longitude = res.longitude;
                  console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);
                  that.setData({  // ‡πÉ‡∏ä‡πâ that ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å setData
                    info: `Latitude: ${latitude}, Longitude: ${longitude}`
                  });
                },
                fail: (error) => {
                  console.log('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ:', error);
                  that.setData({
                    info: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ: ' + error.errMsg
                  });
                }
              });
            },
            fail() {
              // ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
              wx.showToast({
                title: '‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á',
                icon: 'error'
              });
              that.setData({
                info: '‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á'
              });
            }
          });
        } else {
          // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÅ‡∏•‡πâ‡∏ß ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
          wx.getLocation({
            success: (res) => {
              const latitude = res.latitude;
              const longitude = res.longitude;
              console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);
              that.setData({
                info: `Latitude: ${latitude}, Longitude: ${longitude}`
              });
            },
            fail: (error) => {
              console.log('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ:', error);
              that.setData({
                info: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ: ' + error.errMsg
              });
            }
          });
        }
      }
    });
  },


  clearData: function () {
    this.setData({
      info: '',
      imagePath: ''
    });
    console.log('Data cleared:', this.data.myData);
  },

  handleButtonTap(e) {
    const action = e.currentTarget.dataset.action;
    if (this[action]) {
      this[action]();
    }
  },

  navigateToWxml() {
    wx.navigateTo({
      url: '/pages/wxml/wxml',
      success: function () {
        console.log('Navigation successful');
      },
      fail: function () {
        console.log('Navigation failed');
      }
    });
  },

  navigateToWebview() {
    wx.navigateTo({
      url: '/pages/webview/webview',
      success: function () {
        console.log('Navigation successful');
      },
      fail: function () {
        console.log('Navigation failed');
      }
    });
  },

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (Next)
  nextPage() {
    const { currentPage, buttonsPerPage, allButtons } = this.data;
    console.log('Before page change:', currentPage);

    if ((currentPage + 1) * buttonsPerPage < allButtons.length) {
      this.setData(
        { currentPage: currentPage + 1 },
        () => {
          console.log('After page change:', this.data.currentPage);
          this.updateVisibleButtons();
        }
      );
    }
  },

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (Previous)
  prevPage() {
    if (this.data.currentPage > 0) {
      this.setData(
        { currentPage: this.data.currentPage - 1 },
        () => this.updateVisibleButtons()
      );
    }
  },

  //üì± ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå ‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏∏‡πà‡∏ô, ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ ‡∏Ø‡∏•‡∏Ø
  getSystemInfoSync() {
    wx.getSystemInfoAsync({
      success: (res) => {
        this.setData({ info: JSON.stringify(res, null, 2) });
      }
    });
  },
  //üîÑ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏≠‡∏õ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  getUpdateManager() {
    const updateManager = wx.getUpdateManager();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    updateManager.onCheckForUpdate((res) => {
      console.log('Has update:', res.hasUpdate);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      this.setData({ info: 'Has Update: ' + res.hasUpdate });
    });

    // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï, ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
    updateManager.onUpdateReady(() => {
      wx.showModal({
        title: 'Update Available',
        content: 'A new update is available. Do you want to restart?',
        success(res) {
          if (res.confirm) {
            // ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÅ‡∏≠‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
            updateManager.applyUpdate();
          }
        }
      });
    });

    // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï, ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    updateManager.onUpdateFailed(() => {
      wx.showModal({
        title: 'Update Failed',
        content: 'There was an error while updating the app.',
        showCancel: false
      });
    });
  },

  //üöÄ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ (‡∏ú‡πà‡∏≤‡∏ô QR Code, ‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå,‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏±‡∏î)
  getLaunchOptionsSync() {
    const res = wx.getLaunchOptionsSync();
    this.setData({ info: JSON.stringify(res, null, 2) });
  },

  navigateTo() {
    wx.navigateTo({
      url: '/pages/NewPage/newPage',
      success: function () {
        console.log('Navigation successful');
      },
      fail: function () {
        console.log('Navigation failed');
      }
    });
  },

  navigateToVideoContext() {
    wx.navigateTo({
      url: '/pages/video/video',
      success: function () {
        console.log('Navigation successful');
      },
      fail: function () {
        console.log('Navigation failed');
      }
    });
  },

  navigateToCanvas() {
    wx.navigateTo({
      url: '/pages/canvas/canvas',
      success: function () {
        console.log('Navigation successful');
      },
      fail: function () {
        console.log('Navigation failed');
      }
    });
  },

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° 'EventChanel'
  handleEventChanelTap() {
    wx.navigateTo({
      url: '/pages/newPage2/newPage2',
      success: (res) => {
        const eventChannel = res.eventChannel;
        eventChannel.emit('sendData', { message: 'Hello from first page!' });
      }
    });
  },

  handleExitMiniProgram() {
    wx.exitMiniProgram({
      success: () => {
        console.log('Exited Mini Program successfully');
      },
      fail: (err) => {
        console.error('Failed to exit Mini Program:', err);
      }
    });
  },

  handleNavigateToMiniProgram() {
    wx.navigateToMiniProgram({
      appId: 'mptiw78wqqx65b30',
      path: 'pages/index/index',
      extraData: {
        key: 'value'
      },
      envVersion: 'release',
      success: () => {
        console.log('Navigated to Mini Program successfully');
      },
      fail: (err) => {
        console.error('Failed to navigate to Mini Program:', err);
      }
    });
  },

  showShareMenu() {
    wx.showShareMenu({
      showShareItems: ['qq', 'qzone', 'wechatFriends', 'wechatMoment'],
      success() {
        wx.showToast({
          title: '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå',
          icon: 'success',
        });
        this.setData({
          info: '‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
        });
        console.log('Share menu shown successfully');
      },
      fail(error) {
        this.setData({
          info: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå: ' + error.errMsg
        });
        console.log('Failed to show share menu', error);
      }
    });
  },

  // updateShareMenu() {
  //   wx.updateShareMenu({
  //     withShareTicket: true,
  //     success() {
  //       console.log('Share menu updated');
  //     },
  //     fail() {
  //       console.log('Failed to update share menu');
  //     }
  //   });

  // },

  // Show Loading
  showLoding() {
    wx.showLoading({
      title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...',
      mask: true,
    });

    setTimeout(() => {
      wx.hideLoading();
      console.log('‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß');
    }, 4000);
  },



  // Show Modal
  showModal() {
    wx.showModal({
      title: '‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
      content: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
      showCancel: true,
      cancelText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
      confirmText: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
      success(res) {
        if (res.confirm) {
          console.log('‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô');
        } else if (res.cancel) {
          console.log('‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å');
        }
      },
      fail() {
        console.log('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á Modal');
      }
    });
  },

  // Show Toast
  showToast() {
    wx.showToast({
      title: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      icon: 'success',
      duration: 2000,
      success() {
        console.log('Toast ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      },
      fail() {
        console.log('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á Toast');
      }
    });
  },


  // Upload File
  uploadFile() {
    wx.chooseImage({
      success(res) {
        const filePath = res.tempFilePaths[0];
        wx.uploadFile({
          url: 'https://testfile.free.beeceptor.com',
          filePath: filePath,
          name: 'file',
          formData: {
            'user': 'test'
          },
          success(uploadRes) {
            console.log('Upload success:', uploadRes);
            wx.showToast({
              title: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
              icon: 'success',
            });
          },
          fail(error) {
            console.log('Upload failed:', error);
            wx.showToast({
              title: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß',
              icon: 'error',
            });
          }
        });
      },
      fail() {
        wx.showToast({
          title: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå',
          icon: 'error',
        });
      }
    });
  },

  // Connect Socket
  connectSocket() {
    const socket = wx.connectSocket({
      url: 'wss://echo.websocket.org',
      success() {
        console.log('WebSocket connected');
        wx.showToast({
          title: '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WebSocket ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          icon: 'success',
        });
      },
      fail() {
        console.log('WebSocket connection failed');
        wx.showToast({
          title: '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WebSocket ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß',
          icon: 'error',
        });
      }
    });

    // ‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏Ç‡∏≠‡∏á WebSocket
    socket.onOpen(() => {
      console.log('WebSocket ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
      socket.send({
        data: 'Hello, Server!'
      });
    });

    socket.onMessage((message) => {
      console.log('‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:', message.data);
    });

    socket.onClose(() => {
      console.log('WebSocket ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
    });

    socket.onError((error) => {
      console.log('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô WebSocket:', error);
    });
  },

  // Download File
  downloadFile() {
    wx.showLoading({
      title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î...',
      mask: true
    });

    wx.downloadFile({
      url: 'https://server-for-miniapp.onrender.com/download/Test_PDF.pdf',
      success: (res) => {
        wx.hideLoading();

        if (res.statusCode === 200) {
          const tempFilePath = res.tempFilePath;

          console.log('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', tempFilePath);

          wx.showToast({
            title: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            icon: 'success',
          });
          this.setData({
            info: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + tempFilePath + '\nStatus Code: ' + res.statusCode
          });
        } else {
          wx.showToast({
            title: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Status Code: ' + res.statusCode + ')',
            icon: 'error',
          });
          console.log('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß, Status Code:', res.statusCode);

          this.setData({
            info: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Status Code: ' + res.statusCode + ')'
          });
        }
      },
      fail: (error) => {
        wx.hideLoading();
        console.log('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
        wx.showToast({
          title: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Error: ' + error.errMsg + ')',
          icon: 'error',
        });
        this.setData({
          info: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Error: ' + error.errMsg + ')'
        });
      }
    });
  },


  // üì• ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Storage
  setStorageData() {
    try {
      wx.setStorageSync('username', 'admin');
      const storedData = wx.getStorageSync('username');
      this.setData({
        info: `‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö: ${storedData}`
      });
    } catch (e) {
      this.setData({ info: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' });
    }
  },

  // üì§ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Storage
  getStorageData() {
    const data = wx.getStorageSync('username');
    if (data) {
      this.setData({ info: `üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ: ${data}` });
    } else {
      this.setData({ info: '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö' });
    }
  },

  // üóëÔ∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Storage
  clearStorageData() {
    try {
      wx.clearStorage();
      this.setData({ info: 'üóëÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!' });
    } catch (e) {
      this.setData({ info: '‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ' });
    }
  },

  reportEvent() {
    wx.reportEvent({
      event: 'purchase_button_click',
      params: {
        item_id: '12345',
        price: 100,
        user_id: 'user123'
      }
    });

    wx.showToast({
      title: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!',
      icon: 'success'
    });
  },

  getCurrentLocation() {
    return new Promise((resolve, reject) => {
      wx.getLocation({
        success: (res) => {
          const latitude = res.latitude;
          const longitude = res.longitude;
          console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);
          this.setData({
            info: `Latitude: ${latitude}, Longitude: ${longitude}`,
          });
          resolve(res); // ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        },
        fail: (error) => {
          console.log('Error:', error);
          this.setData({
            info: 'Failed to get location: ' + error.errMsg,
          });
          wx.showToast({
            title: 'Failed to get location: ' + error.errMsg,
            icon: 'error',
          });
          reject(error); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ
        }
      });
    });
  },

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
  chooseLocation() {
    wx.chooseLocation({
      success: (res) => {
        const name = res.name;
        const address = res.address;
        const latitude = res.latitude;
        const longitude = res.longitude;

        console.log(`Location chosen: ${name}, Address: ${address}, Latitude: ${latitude}, Longitude: ${longitude}`);
        this.setData({
          info: `Location: ${name}, Address: ${address}, Latitude: ${latitude}, Longitude: ${longitude}`,
        });
      },
      fail: (error) => {
        console.log('Error:', error);  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô console
        this.setData({
          info: 'Failed to choose location: ' + error.errMsg
        });
        wx.showToast({
          title: 'Failed to choose location: ' + error.errMsg,  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô Toast
          icon: 'error',
        });
      }
    });
  },

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
  openLocation() {
    const latitude = 13.7102;
    const longitude = 100.433;
    const name = 'Example';
    const address = '22/44';

    try {
      wx.openLocation({
        latitude,
        longitude,
        name,
        address,
        scale: 18,
        success: () => {
          this.setData({
            info: `‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: ${name}, ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${address}, ‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î: ${latitude}, ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î: ${longitude}`
          });
        },
        fail: (error) => {
          console.log('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:', error);
          wx.showToast({
            title: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ',
            icon: 'error',
          });
          this.setData({
            info: `‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ (Error: ${error.errMsg})`
          });
        }
      });
    } catch (error) {
      console.log('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
      wx.showToast({
        title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà',
        icon: 'error',
      });
      this.setData({
        info: `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà: ${error.message}`
      });
    }
  },

  scanQRCode() {
    wx.scanCode({
      success: (res) => {
        this.setData({ info: '‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
        const qrCodeUrl = res.result;

        if (qrCodeUrl) {
          // ‡πÄ‡∏õ‡∏¥‡∏î URL ‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å
          wx.openUrl({
            url: qrCodeUrl
          });

          // ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å URL ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î
          wx.setClipboardData({
            data: qrCodeUrl,
            success: () => {
              wx.showToast({
                title: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',
              });
            }
          });
        }
      },
      fail: (err) => {
        this.setData({ info: '‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });
      }
    });
  },

  saveFile() {
    wx.showLoading({
      title: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î...',
      mask: true
    });

    const fs = wx.getFileSystemManager();

    wx.downloadFile({
      url: 'https://server-for-miniapp.onrender.com/download/Test_PDF.pdf',
      success: (res) => {
        wx.hideLoading();
        if (res.statusCode === 200) {
          const tempFilePath = res.tempFilePath;
          console.log('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', tempFilePath);

          fs.saveFile({
            tempFilePath: tempFilePath,
            success: (saveRes) => {
              console.log('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', saveRes.savedFilePath);
              this.setData({
                info: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + saveRes.savedFilePath + '\nStatus Code: ' + res.statusCode
              });
              wx.showToast({
                title: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
                icon: 'success',
              });

              // ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
              wx.openDocument({
                filePath: saveRes.savedFilePath,
                success: (openRes) => {
                  console.log('‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                  wx.showToast({
                    title: '‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
                    icon: 'success',
                  });
                },
                fail: (err) => {
                  console.log('‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
                  wx.showToast({
                    title: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ',
                    icon: 'error',
                    duration: 5000
                  });
                }
              });

            },
            fail: (err) => {
              console.log('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
              wx.showToast({
                title: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ',
                icon: 'error',
              });
              // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô setData
              this.setData({
                info: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ (Error: ' + err.errMsg + ')'
              });
            }
          });
        } else {
          wx.showToast({
            title: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Status Code: ' + res.statusCode + ')',
            icon: 'error',
          });
          console.log('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß, Status Code:', res.statusCode);

          // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô setData
          this.setData({
            info: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Status Code: ' + res.statusCode + ')'
          });
        }
      },
      fail: (error) => {
        console.log('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
        wx.showToast({
          title: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Error: ' + error.errMsg + ')',
          icon: 'error',
        });

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡πÉ‡∏ô setData
        this.setData({
          info: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß (Error: ' + error.errMsg + ')'
        });
      }
    });
  },

  getSavedFileList() {
    wx.getSavedFileList({
      success: (res) => {
        console.log('Saved files:', res.fileList);

        const fileNames = res.fileList.map(file => file.filePath);
        this.setData({
          info: '‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ: ' + fileNames.join(', ')
        });
      },
      fail: (error) => {
        console.log('Failed to get saved file list:', error);
        wx.showToast({
          title: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ',
          icon: 'error',
        });
      }
    });
  },



  chooseImage() {
    wx.chooseImage({
      count: 1,
      sizeType: ['original', 'compressed'],
      sourceType: ['album', 'camera'],
      success: (res) => {
        console.log('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', res.tempFilePaths);
        this.setData({
          imagePath: res.tempFilePaths[0]
        });
      },
      fail: (error) => {
        console.log('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', error);
        wx.showToast({
          title: '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß',
          icon: 'error',
        });
      }
    });
  },

  createWorker() {
    try {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Web Worker ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!wx.canIUse('createWorker')) {
        console.log('‚ùå ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Web Worker');
        this.setData({ info: '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Web Worker' });
        return;  // ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Worker ‡πÄ‡∏î‡∏¥‡∏°‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏¢‡∏∏‡∏ï‡∏¥
      if (this.worker) {
        console.log('‚ùå Worker ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà! ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡∏∏‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
        this.worker.terminate();  // ‡∏¢‡∏∏‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Worker ‡πÄ‡∏î‡∏¥‡∏°
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Web Worker ‡πÉ‡∏´‡∏°‡πà
      const worker = wx.createWorker('workers/workers.js');

      if (worker) {
        console.log('‚úÖ Worker Created Successfully');

        const messageToSend = 'Hello from main thread!';

        // üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á Worker
        worker.postMessage({
          data: messageToSend
        });

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï info ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á
        this.setData({
          info: `üì§ Sent: ${messageToSend}`
        });

        // ‡πÅ‡∏™‡∏î‡∏á toast ‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        wx.showToast({
          title: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á Worker!',
          icon: 'success',
          duration: 2000
        });

        // üì© ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å Worker
        worker.onMessage((msg) => {
          console.log('üì• Received from Worker:', msg.data);

          // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏•‡∏á‡πÉ‡∏ô info
          this.setData({
            info: `${this.data.info}\nüì• Received: ${msg.data}`
          });

          // ‡πÅ‡∏™‡∏î‡∏á toast ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å Worker
          wx.showToast({
            title: `Reply: ${msg.data}`,
            icon: 'success',
            duration: 2000
          });
        });

        // ‡πÄ‡∏Å‡πá‡∏ö worker ‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
        this.worker = worker;
      } else {
        throw new Error('Failed to create worker');
      }
    } catch (error) {
      console.error('‚ùó Error:', error.message);
      this.setData({
        info: error.errMsg
      });
      wx.showToast({
        title: 'Worker Error',
        icon: 'error'
      });
    }
  },
  // ‚ùå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Worker
  terminateWorker() {
    if (this.worker) {
      this.worker.terminate();
      console.log('‚ùå Worker Terminated');
      wx.showToast({
        title: 'Worker Terminated',
        icon: 'none'
      });
      this.worker = null;
    }
  },


  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
  previewImage() {
    const imageUrls = [
      'https://www.sarakadee.com/blog/oneton/wp-content/uploads/2017/12/cat-cute-e1533862828469.jpg',
      'https://s.isanook.com/wo/0/ud/46/231281/a.jpg?ip/crop/w670h402/q80/jpg',
      'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHBsaenrlQWuS4zFo4cYGm0wUACu1suziTbA&s'
    ];

    const currentImageUrl = imageUrls[0];

    wx.previewImage({
      current: currentImageUrl,
      urls: imageUrls
    });
  },

  login() {
    wx.login({
      success: (res) => {
        if (res.code) {
          console.log('‚úÖ Login code:', res.code);

          wx.request({
            url: 'http://localhost:8080/login',
            method: 'POST',
            header: {
              'Content-Type': 'application/json',
            },
            data: { code: res.code },

            success: (response) => {
              console.log('üéØ Server response:', response.data);

              if (response.data && response.data.openid) {
                wx.showToast({
                  title: 'üéâ Login Success!',
                  icon: 'success',
                });
                this.setData({
                  userInfo: response.data,
                });
              } else {
                wx.showToast({
                  title: '‚ö†Ô∏è Login Failed',
                  icon: 'none',
                });
                console.error('‚ùó Invalid response:', response.data);
              }
            },

            fail: (error) => {
              console.error('‚ùå Request failed:', error);
              wx.showToast({
                title: 'Network Error',
                icon: 'error',
              });
            },
          });
        } else {
          console.log('‚ùó Login failed:', res.errMsg);
          wx.showToast({
            title: 'Login Failed',
            icon: 'none',
          });
        }
      },

      fail: (err) => {
        console.error('‚ùå wx.login failed:', err);
        wx.showToast({
          title: 'Login Error',
          icon: 'error',
        });
      },
    });
  },

  copyLink() {
    wx.getClipboardData({
      success: (res) => {
        console.log('Clipboard content:', res.data);
        this.setData({
          copiedUrl: res.data,
        });
        wx.showToast({
          title: 'Link copied!',
          icon: 'none',
        });
      },
    });
  },

  //miniApp to flutter
  callApiRegistered() {
    this.getCurrentLocation()
      .then((location) => {
        var opts = {
          api_name: 'testMyApi',
          success: function (res) {
            console.log(res);
            wx.showToast({
              title: 'Success!',
              icon: 'success',
            });
          },
          fail: function (res) {
            console.log(res);
          },
          complete: function (res) {
            console.log(res);
            wx.showToast({
              title: 'Success!',
              icon: 'success',
            });
          },
          data: {
            latitude: location.latitude,
            longitude: location.longitude
          }
        };

        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å wx.invokeNativePlugin ‡∏î‡πâ‡∏ß‡∏¢ options ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
        wx.invokeNativePlugin(opts);
      })
      .catch((error) => {
        console.error('Error getting location: ', error);
        wx.showToast({
          title: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ',
          icon: 'error',
        });
      });
  },

  //‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Flutter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô Mini Program
  launchOptions() {
    var paramFromFlutter = wx.getLaunchOptionsSync()
    const val = "Client param: " + JSON.stringify(paramFromFlutter.extendData)
    this.setData({
      info: val
    })
  }
});
